{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "generate_trace",
  "steps": [
    {
      "file": "crates/core/machine/src/program/mod.rs",
      "description": "先来看一下这个 chip 是做什么的 \n\n用来处理 CPU Events 的\n\n这个测试用例比较神奇 Program 并没有被执行 runtime 所以生成的 trace 里面都是 0\n\n用 Debugger 跟了一下 cpu_events 里面是空的",
      "line": 218
    },
    {
      "file": "crates/core/machine/src/memory/global.rs",
      "description": "这里生成的都是 0 为什么？",
      "line": 378
    },
    {
      "file": "crates/core/machine/src/memory/local.rs",
      "description": "这个倒是比较好一点 能够看到指令对应的 trace 生成\n\nTODO: 盲猜这里是负责处理全局变量和局部变量的 memory",
      "line": 205
    },
    {
      "file": "crates/core/machine/src/alu/add_sub/mod.rs",
      "description": "第四个比较有趣的测试",
      "line": 246
    },
    {
      "file": "crates/core/machine/src/alu/add_sub/mod.rs",
      "description": "chip 除了能够 generate trace 之外 还有一个功能就是定义该 chip 所对应运算的约束\n\nref: https://starkware.co/wp-content/uploads/2021/12/STARK101-Part2.pdf\n\nTODO: chip 之间的通信是怎么实现的 以及 chip 之间的通信是被记录在哪里的\n\nTODO: CPU CHIP 是怎么查询其他表的结果的？",
      "line": 174
    }
  ]
}